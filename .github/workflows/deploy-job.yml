name: Docker
on:
  push:
    tags: [ '*' ]

jobs:
  docker-build-push-telegram-bot:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/empioner-telegram-bot/
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ./telegram-bot/telegram-bot-microservice/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  docker-build-push-telegram-service:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/empioner-telegram-service
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ./telegram-service/telegram-service-microservice/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  prepare-environment:
    runs-on: self-hosted
    needs:
      - docker-build-push-telegram-bot
      - docker-build-push-telegram-service
    steps:
      - name: Stop and remove containers, networks
        run: docker compose stop
      - name: Update images
        run: docker compose pull

  deploy:
    runs-on: self-hosted
    env:
      REDIS_USER: ${{ secrets.REDIS_USER}}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_USER_PASSWORD: ${{ secrets.REDIS_USER_PASSWORD}}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      MONGODB_USER: ${{ secrets.MONGODB_USER}}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD}}
      MONGODB_AUTHENTICATION_DATABASE: ${{ secrets.MONGODB_AUTHENTICATION_DATABASE}}
      BOT_TITLE: ${{secrets.BOT_TITLE}}
      BOT_DESCRIPTION: ${{secrets.BOT_DESCRIPTION}}
      BOT_USERNAME: ${{secrets.BOT_USERNAME}}
      BOT_TOKEN: ${{secrets.BOT_TOKEN}}
      BOT_CONFIG_IMAGE_PLACEHOLDER: ${{secrets.BOT_CONFIG_IMAGE_PLACEHOLDER}}
      BOT_CONFIG_SHOW_SHOW_IMAGE_ID: ${{secrets.BOT_CONFIG_SHOW_SHOW_IMAGE_ID}}
      BOT_CONFIG_SHOW_SERIES_IMAGE_ID: ${{secrets.BOT_CONFIG_SHOW_SERIES_IMAGE_ID}}
      BOT_CONFIG_SHOW_SPECIAL_IMAGE_ID: ${{secrets.BOT_CONFIG_SHOW_SPECIAL_IMAGE_ID}}
      BOT_CONFIG_SHOW_MOVIE_IMAGE_ID: ${{secrets.BOT_CONFIG_SHOW_MOVIE_IMAGE_ID}}
      BOT_SINGLE_SHOW_MODE_SHOW_ID: ${{secrets.BOT_SINGLE_SHOW_MODE_SHOW_ID}}

    needs: prepare-environment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Start docker containers
        run: docker compose up -d

  clear:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Remove unused data
        run: docker system prune -a -f